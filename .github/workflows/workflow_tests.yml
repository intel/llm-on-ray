name: Tests

on:
  workflow_call:
    inputs:
      ci_type:
        type: string
        default: 'pr'

jobs:
  bare-test:

    name: bare-test
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
          architecture: 'x64'

      - name: Display Python version
        run: |
          python -c "import sys; print(sys.version)"

      - name: Install dependencies for tests
        run: |
          python -m pip install --upgrade pip
          pip install .[cpu] --extra-index-url https://download.pytorch.org/whl/cpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/cpu/us/
          # Dynamic link oneCCL and Intel MPI libraries
          source $(python -c "import oneccl_bindings_for_pytorch as torch_ccl; print(torch_ccl.cwd)")/env/setvars.sh
          # Additional libraries required  for pytest
          pip install -r ./tests/requirements.txt

      - name: Start Ray Cluster
        run: |
          ray start --head

      - name: Run Tests
        run: |
          ./tests/run-tests.sh

  docker-test:

    name: docker-test
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    runs-on: ubuntu-latest
    env:
      SHELL: /usr/bin/bash -eo pipefail
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine Target
        id: "target"
        run: |
          target="inference"
          echo "target is ${target}"
          echo "target=$target" >> $GITHUB_OUTPUT

      - name: Source build script  
        run: |
          cp .github/workflows/scripts/docker.sh .

      - name: Build Docker Image
        run: |
          DF_SUFFIX=".tests_cpu_and_deepspeed"
          TARGET=${{steps.target.outputs.target}}
          PYTHON_V=${{matrix.python-version}}
          source docker.sh
          build_and_prune TARGET=${TARGET} DF_SUFFIX=${DF_SUFFIX} PYTHON_V=${PYTHON_V}
          docker images
      - name: Start Docker Container
        run: |
          TARGET=${{steps.target.outputs.target}}
          code_checkout_path=${{ github.workspace }}
          source docker.sh
          clean_docker  TARGET=${TARGET} 
          run_docker TARGET=${TARGET} code_checkout_path=${code_checkout_path}

      - name: Install Dependencies for Tests
        run: |
          TARGET=${{steps.target.outputs.target}}
          bash_command="pip install -r ./tests/requirements.txt"
          source docker.sh
          docker_bash TARGET=${TARGET}  bash_command=${bash_command}

      - name: Start Ray Cluster
        run: |
          TARGET=${{steps.target.outputs.target}}
          bash_command="./dev/scripts/start-ray-cluster.sh"
          source docker.sh
          docker_bash TARGET=${TARGET}  bash_command=${bash_command}

      - name: Run Tests
        run: |
          TARGET=${{steps.target.outputs.target}}
          bash_command="./tests/run-tests.sh"
          source docker.sh
          docker_bash TARGET=${TARGET}  bash_command=${bash_command}

      - name: Stop Container
        if: success() || failure()
        run: |
          TARGET=${{steps.target.outputs.target}}
          source docker.sh
          clean_docker  TARGET=${TARGET} 